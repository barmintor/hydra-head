require File.expand_path(File.dirname(__FILE__) + '/../spec_helper')
require 'mocha'


# See cucumber tests (ie. /features/edit_document.feature) for more tests, including ones that test the edit method & view
# You can run the cucumber tests with 
#
# cucumber --tags @edit
# or
# rake cucumber

describe DatastreamsController do
  
  before do
    #controller.stubs(:protect_from_forgery).returns("meh")
    session[:user]='bob'
  end
  
  it "should use DatastreamsController" do
    controller.should be_an_instance_of(DatastreamsController)
  end
  
  
  describe "Paths Generated by Custom Routes:" do
    # paths generated by custom routes
    it "should map {:controller=>'datastreams', :action=>'index', :asset_id=>'test:3'} to GET /assets/test:3/datastreams" do
      { :get => "/assets/test:3/datastreams" }.should route_to(:controller => 'datastreams', :action => 'index', :asset_id=>'test:3')
    end

    it "should map {:controller=>'datastreams', :action=>'index', :asset_id=>'test:3', :id=>'DC'} to GET /assets/test:3/datastreams/DC" do
      { :get => "/assets/test:3/datastreams/DC" }.should route_to(:controller => 'datastreams', :action => 'show',
                                                                  :id=>'DC',:asset_id=>'test:3')
    end

    it "should map asset_datastreams_path" do
      asset_datastreams_path("test:3").should == '/assets/test:3/datastreams'
    end
    it "should map asset_datastreams_path" do
      asset_datastream_path("test:3","DC").should == '/assets/test:3/datastreams/DC'
    end
  end
  
  describe "index" do
    
    describe "access controls" do
      before(:all) do
      end

      it "should list datastreams on public object if role does not have permissions" do
        controller.stubs(:current_user).returns(nil)
        get(:index, :asset_id=>'hydrangea:fixture_mods_article1').status.should == 200
      end

      it "should not allow list datastreams on restricted objects if role does not have permissions" do
        controller.stubs(:current_user).returns(nil)
        get(:index, :asset_id=>'hydrangea:fixture_archivist_only_mods_article').status.should == 401
      end

      it "should list datastreams on restricted objects if role does have permissions" do
       	User.any_instance.stubs(:email).returns("BigWig@example.com")
        mock_user =  User.new
        mock_user.stubs(:is_being_superuser?).returns(true)
        controller.stubs(:current_user).returns(mock_user)
        get(:index, :asset_id=>'hydrangea:fixture_archivist_only_mods_article').status.should == 200
      end
    end
  end
  
  describe "filters" do
    describe "index" do
      it "should trigger enforce_show_permissions" do
        controller.stubs(:current_user).returns(nil)
        controller.stubs(:downloadables).returns([])
        controller.expects(:enforce_show_permissions)
        get :index, :asset_id=>'hydrangea:fixture_mods_article1'
      end
    end
  end
  
  it "should redirect to catalog#index when non-existent asset is requested" do
    controller.stubs(:current_user).returns(nil)
    controller.stubs(:downloadables).returns([])
    controller.expects(:enforce_show_permissions)
    get(:index, :asset_id=>'test:__NO_EXIST__').status.should == 404
    get(:index, :asset_id=>'test:__NO_EXIST__').body.should include('redirected')
  end  
end
